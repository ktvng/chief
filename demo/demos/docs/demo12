# Overview

This page builds on the last example and introduces the mixins construction supported by 
Pebble.

# Details

Whereas by default, methods are generics, line [14] demonstrates a method which 
takes a non-generic parameter. As expected, this method works for the 'Noble' type, 
but not for the 'Doctor' type. 


Additionally, lines [6-11] demonstrate the mixin property. 'Nameable', defined on 
line [1], is a object/method which defines the Calls 'Name' and 'Named' in it's local 
scope. The 'inherits' keyword simply calls a method without changing scopes. Thus 
on line [7], 'Nameable()' is called using the Doctor's scope. 


Line [11] uses the 'here' operator which is an alias of 'inherits. The 'inherits' keyword 
is intended to be used to signifiy mixin inheritance whereas the 'here' operator is 
intended for more general purpose usage. Currently we are still exploring whether to 
keep both, or, if it makes more sense to keep a single keyword for a method's 
inplace invocation.